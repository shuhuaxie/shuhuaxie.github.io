---
layout: post
title:  "String"
date:   2017-03-09 19:43:30 +0800

---
* String ‘+’

1. 通过javap查看，编译器会对代码进行装箱操作，同时将String+String转化为StringBuilder实现

> cip+ciop; <br>
> into <br>
> new StringBuilder(cip).append(ciop).toString();

2. 可以修改 ‘+’的实现吗？

>Can we overload the operators defined in the Java language? <br>
>ABSOLUTELY NOT!

* String 内存

``` java
	String str1 = "a";
	String str2 = "b";
	String str3 = "ab";
	String str4 = str1 + str2;
	String str5 = new String("ab");
	 
	System.out.println(str5.equals(str3));
	System.out.println(str5 == str3);
	System.out.println(str5.intern() == str3);
	System.out.println(str3.intern() == str5);
	System.out.println(str5.intern() == str4);

```
结果

``` java
true
false
true
false
false
```
``` java
  String a = new String("ab");
  String b = a;
  System.out.println(a.equals(b));
  a = "xx";
  System.out.println(a.equals(b));
```
结果

``` java
true
false
```
结论：
1. String对象会在常量池中新建字符串
2. 新new出来的对象不会判断常量池里面是否已经存在该变量，但intern会映射到第一个创建的相同字符串的地址；通过拼接创造的String会去常量池中查找。
3. 当对String进行修改操作时，会直接修改String地址，所以严格说String是‘不可以被修改的’

* toString的实现


  [stack AS1 ‘+’](http://stackoverflow.com/questions/11408427/how-does-the-string-class-override-the-operator)<br>
  [stack AS2 ‘+’](http://stackoverflow.com/questions/2955640/how-does-operator-behaves-differently-with-numbers-and-strings-in-java)<br>
  [常量池](http://www.jianshu.com/p/c7f47de2ee80)
  [String中intern的方法](http://www.cnblogs.com/wanlipeng/archive/2010/10/21/1857513.html)
  [哼哼哈嘿 博客内存](http://www.cnblogs.com/ITtangtang/p/3976820.html)